// ------------ логгер  --------------------
const log = require("./tools/log.js"); // логер
let logName = "<" + __filename.replace(__dirname, "").slice(1) + ">:";
let trace = 1; //=1 глобальная трассировка (трассируется все)

const config = {};

// включает/выключает  эмуляцию обмена по RS485
config.emulateRS485 = 1; //true;
/**
 * список констант приоритетов REAL_TIME=0,HIGHT=1,MIDDLE=2,LOW=3
 */
config.priority = {
  REAL_TIME: 0,
  HIGHT: 1,
  MIDDLE: 2,
  LOW: 3,
};

// загружает настройки связи
config.connection = require("./conf_iface.js");
// // ------------------- описание печей (сущностей) ------------------------
// let entities = [];
// entities.push({
//   id: "SNO-658-11",
//   shortName: "СНО-6.5.8/11", // короткое имя печи
//   fullName: "Печь закалочная СНО-6.5.8/11", // полное имя печи
//   temperature: { min: 0, max: 1000 }, // диапазон рабочих температур
//   devices: [{ addr: 1, type: "trp08", usedDevReg: "SP;T;state;H;Y" }],

//   regs: {
//     "1-T": {
//       // реальный адрес регистра, по которому нужно делать запрос

//       title: "T", // отображаемое имя для вывода в описании поля
//       type: "integer", // тп поля
//       units: "\u00b0C", //единицы
//       description: "Текущая температура в печи", // описание
//       legend: "Температура", // Надпись для графика
//     },
//     "2-T": {
//       // реальный адрес регистра, по которому нужно делать запрос
//       title: "T2", // отображаемое имя для вывода в описании поля
//       type: "integer", // тп поля
//       units: "\u00b0C", //единицы
//       description: "Текущая температура в зоне 2", // описание
//       legend: "Т2", // Надпись для графика
//     },
//     "3-T": {
//       // реальный адрес регистра, по которому нужно делать запрос
//       title: "T3", // отображаемое имя для вывода в описании поля
//       type: "integer", // тп поля
//       units: "\u00b0C", //единицы
//       description: "Текущая температура в зоне 3", // описание
//       legend: "Т3", // Надпись для графика
//     },
//     "4-T": {
//       // реальный адрес регистра, по которому нужно делать запрос
//       title: "T4", // отображаемое имя для вывода в описании поля
//       type: "integer", // тп поля
//       units: "\u00b0C", //единицы
//       description: "Текущая температура в зоне 4", // описание
//       legend: "Т4", // Надпись для графика
//     },
//     "1-SP": {
//       // имя для вывода в описании поля
//       title: "SP1", // отображаемое имя для вывода в описании поля
//       type: "integer", // тп поля
//       units: "\u00b0C", //единицы
//       description: "Заданная температура в зоне 1", // описание
//       legend: "SP1", // Надпись для графика
//     },
//     "2-SP": {
//       // имя для вывода в описании поля
//       title: "SP2", // отображаемое имя для вывода в описании поля
//       type: "integer", // тп поля
//       units: "\u00b0C", //единицы
//       description: "Заданная температура в зоне 2", // описание
//       legend: "SP2", // Надпись для графика
//     },
//     "3-SP": {
//       // имя для вывода в описании поля
//       title: "SP3", // отображаемое имя для вывода в описании поля
//       type: "integer", // тп поля
//       units: "\u00b0C", //единицы
//       description: "Заданная температура в зоне 3", // описание
//       legend: "SP3", // Надпись для графика
//     },
//     "4-SP": {
//       // имя для вывода в описании поля
//       title: "SP4", // отображаемое имя для вывода в описании поля
//       type: "integer", // тп поля
//       units: "\u00b0C", //единицы
//       description: "Заданная температура в зоне 4", // описание
//       legend: "SP4", // Надпись для графика
//     },
//     "nn-SP": {
//       // имя для вывода в описании поля
//       title: "SP4", // отображаемое имя для вывода в описании поля
//       type: "integer", // тп поля
//       units: "\u00b0C", //единицы
//       description: "Заданная температура в зоне 4", // описание
//       legend: "SP4", // Надпись для графика
//     },
//   }, //regs
//   listRegs: "1-T;1-SP", // список регистров для запроса, что бы их не генерировать каждый раз
// });

// entities.push({
//   id: "SSHCM-8-15-10",
//   shortName: "СШЦМ-8.15/10", //
//   fullName: "Печь цементационная СШЦМ-8.15/10", //
//   temperature: { min: 0, max: 1000 }, // диапазон рабочих температур
//   regs: {
//     "1-SP": {
//       title: "SP1", // имя для вывода в описании поля
//       units: "\u00b0C",
//       type: "integer",
//       description: "Заданная температура в верхней зоне",
//       legend: "Верх.Задание", // Надпись для графика
//     },
//     "1-T": {
//       title: "T1", // имя для вывода в описании поля
//       type: "integer",
//       units: "\u00b0C",
//       description: "Текущая температура в верхней зоне",
//       legend: "Верх.Температура", // Надпись для графика
//     },
//     "2-SP": {
//       title: "SP2", // имя для вывода в описании поля
//       units: "\u00b0C",
//       type: "integer",
//       description: "Заданная температура в нижней зоне",
//       legend: "Низ.Задание", // Надпись для графика
//     },
//     "2-T": {
//       title: "T2", // имя для вывода в описании поля
//       units: "\u00b0C",
//       type: "integer",
//       description: "Текущая температура в нижней зоне",
//       legend: "Низ.Температура", // Надпись для графика
//     },
//   }, //regs
//   listRegs: "1-SP;1-T;2-T;2-SP", // список регистров для запроса, что бы их не генерировать каждый раз
// });

// config.devices = ["all"]; // таблица сопоставления адреса устройства и типа (массив где индекс - адрес устройства, а значение - имя файла драйвера)
// //async () => {
// //let getEntities = require("./entities");
// let entities = require("./entities"); //await getEntities();
// //trace ? log("i", logName, "---------- Entities ---------") : null;
// //trace ? console.dir(entities, { depth: 4 }) : null;
// config.entities = entities;
// for (let i = 0; i < entities.length; i++) {
//   // перебираем печи
//   for (let j = 0; j < entities[i].devices.length; j++) {
//     // перебираем устройства
//     let dev = entities[i].devices[j];
//     if (config.devices[dev.addr]) {
//       // два устройства с одинаковым адресом
//       let msg = `Ошибка: одинаковый адрес у двух приборов на одной линии`;
//       log("e", logName, msg);
//       throw new Error(msg);
//     }
//     // добавляем устройство в список
//     config.devices.push(dev.type);
//   }
// }
//};
// config.entities = require("./entities");

// config.devices = [
//   "all", //0
//   "TRP08", //1
//   "TRM210", //2
//   "TRP08", //3
// ];

// список используемых алиасов с указанием физического имени регистра
// (т.е. адрес ModBus + сигнатура в драйвере устройства, например 7SQ1 => 5-DIO1 )
// var tags = new Map();
// for (var i = 1; i <= 2; i++) {
//   tags.set("tT" + i, i + "-Tt");
//   tags.set("SP" + i, i + "-SP");
// }
// tags.set("T3", "3-T");
// tags.set("SP3", "3-tT");

//config.tags = tags;
//tags.set("sT"+i,i+"-T");
// настройки логгера
config.logger = {
  path: __dirname + "/public/logs",
  period: 20, // период между записями 30 секунд
  separator: "\t", // разделитель значений в строке
  deviation: 2, //  коридор нечуствительности изменения температуры,
  //  т.е. если предыдущее и последующие значения отличаются менее чем на 2 С,
  //  запись в файл не делается.
  errValue: -20, // записывается в лог-файл если ошибка
};

// ------------  очереди опроса  -----------------------
//config.queue = {};
// рабочая очередь опроса, опрашивается автоматически в цикле
//  актульным считается значение,если оно считано не более 5 сек назад
//config.queue.work = ["1-T", "2-T", "3-T", "4-T", "2-SP", "3-tT"];

module.exports = config;

if (!module.parent) {
  console.dir(config, { depth: 4 });
  //console.dir(new Buffer.from([15, 10, 8]), { depth: 4 });
  //util.inspect(config)
}

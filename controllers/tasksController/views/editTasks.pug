
//- p --------------------- debugging info manager = -----------------------------
//- pre manager=#{JSON.stringify(manager)}  
//- p --------------------- debugging info -----------------------------

//- створюємо прапорці трасування, так як в нас багато файлів нам потрібно в кожному
//- з них вмикати трасування окремо від інших , тому кожний файл з кодом
//- перед виконанням свого коду запамятовує поточне значення trace в beforeTrace: 'beforeTrace=trace'
//- після завершення відновлює попереднє значення 'trace=beforeTrace', таким чином модулі не будуть заважати іншим
script.
  const tasks={};
  tasks.header = JSON.parse(  '!{JSON.stringify(manager.header)}' );
  tasks.id=JSON.parse(  '!{JSON.stringify(manager.id)}' );
  tasks.reg = JSON.parse(  '!{JSON.stringify(manager.reg)}' );
  tasks.list = JSON.parse(  '!{JSON.stringify(manager.list)}' );
  tasks.homeURL = JSON.parse(  '!{JSON.stringify(manager.homeURL)}' );
  // поточна активна програма
  tasks.value  =  JSON.parse( '!{JSON.stringify(manager.value)}');

//- створюємо контейнери для вмісту
div(class="container-fluide")
  div(class="row")
    div(class="col-2 border")
      div(class="container-fluide", id="fileManagerContainer")
        //- менеджер файлів
        include tasks_fileManager.pug
      //- p Тут має бути вибір зі списку програм
    div(class="col")
      div(class="container-fluide", id="tasksContainer")

//- готуємо початкові дані 
script.

  //- const tasks={};


  //- tasks.header = JSON.parse(  '!{JSON.stringify(manager.header)}' );
  //- tasks.id=JSON.parse(  '!{JSON.stringify(manager.id)}' );
  //- tasks.reg = JSON.parse(  '!{JSON.stringify(manager.reg)}' );
  //- tasks.list = JSON.parse(  '!{JSON.stringify(manager.list)}' );
  //- tasks.homeURL = JSON.parse(  '!{JSON.stringify(manager.homeURL)}' );
  tasks.container = document.getElementById( 'tasksContainer' );



script.
  // додано для сумісності з попереднім кодом
  tasks.elementsTypes = myElementsRender;
  tasks.ClassRegsList = myElementsRender.regsList;


script  
  //- загальний клас для керування всіма елементами на сторінці
  include tasksR_general.js

  //- елемент createStep.js
  include tasks_ClassCreateStep.js
  //- елемент createMModalWindow.js
  //- include createModalWindow.js






script.
  //- запускаємо відображення списку кроків програми
  tasks.renderList();


//- //- кнопки 
//- div(class="row")
//-   div(class="col")
//-     button(type="button" class="btn btn-primary" id="buttonTasksAccept")= `${{ua:"Застосувати" , en: "Accept", ru: "Применить" }[lang]}`
//-     //-   Застосувати 
//- script
//-   include buttonTasksAccept.js
